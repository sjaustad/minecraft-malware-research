from models.scikit_learn import Scikit
from import_data import ImportData
import pandas as pd

dataset = ImportData()
test_cases = [
    {'name':'No correlation filter, no K best feature',
     'correlation_filter':0,
     'k_best_features':0
     },
    {'name':'90% correlation filter, no K best feature',
     'correlation_filter':0.90,
     'k_best_features':0
     },
    {'name':'80% correlation filter, no K best feature',
     'correlation_filter':0.80,
     'k_best_features':0
     },
    {'name':'No correlation filter, 5 K best feature', ## Best performing model for PE files
     'correlation_filter':0,
     'k_best_features':5
     },
    {'name':'90% correlation filter, 5 K best feature',
     'correlation_filter':0.90,
     'k_best_features':5
     },
    {'name':'80% correlation filter, 5 K best feature',
     'correlation_filter':0.80,
     'k_best_features':5
     },
    {'name':'No correlation filter, 10 K best feature',
     'correlation_filter':0,
     'k_best_features':10
     },
    {'name':'90% correlation filter, 10 K best feature',
     'correlation_filter':0.90,
     'k_best_features':10
     },
    {'name':'80% correlation filter, 10 K best feature', ## Best performing model for JAR files
     'correlation_filter':0.80,
     'k_best_features':10
     },
    {'name':'No correlation filter, 18 K best feature',
     'correlation_filter':0,
     'k_best_features':18
     },
    {'name':'90% correlation filter, 18 K best feature',
     'correlation_filter':0.90,
     'k_best_features':18
     },
    {'name':'80% correlation filter, 18 K best feature',
     'correlation_filter':0.80,
     'k_best_features':18
     },
]
results_dfs = []
for set_name in ['jar','exe']:
    set_attribute = getattr(dataset, set_name)
    for test in test_cases:
        data = {}
        data['name'] = f"{set_name.title()} - {test['name']}"
        with open('debug.txt','a+') as file:
            file.write(f"Now running {data['name']}\n")
        print(f"Now running {data['name']}")
        scikit_ml = Scikit(set_name,data['name'],set_attribute.train_set, set_attribute.test_set, correlation_filter=test['correlation_filter'], k_best_features=test['k_best_features'])
        data['results'] = scikit_ml.results_df
        results_dfs.append(data)
        del scikit_ml

combined_df = pd.DataFrame()
for entry in results_dfs:
    name = entry['name']
    df = entry['results']
    
    # Add the 'name' as a row above the DataFrame
    name_df = pd.DataFrame({'name': [name]})
    df = pd.concat([name_df, df], ignore_index=True)
    
    # Concatenate the DataFrame vertically
    combined_df = pd.concat([combined_df, df], ignore_index=True)

combined_df.to_csv('data_analytics/ml_results.csv', index=False)
