import requests, time, math
import pandas as pd
from datetime import datetime

csv_path = "VT_extra_data.csv"
csv_out = "VT_extra_data2.csv"

def main():

    ## import the csv key to match hashes with filenames
    df = pd.read_csv(csv_path)
    headers = list(df)
    headers.extend(['detections'])
    df = df.reindex(columns = headers)

    failure_count = 0
    
    for index, row in df.iterrows():
        if failure_count > 5:
            return print(f"{failure_count} failures. Terminating program. Obtain new recaptcha response.")
        try: 
            print(f"Processing {row['Hash']}")
            ## resumes at last point if these values exist
            #if isinstance(row['detections'],float):# and isinstance(row['total_submissions'],float) and isinstance(row['threat'],str):
            #test= row['detections'].isnull().values[0]
            if not row['detections'].isnull().values[0]:
                print("Data exists, skipping...")
                continue

            
            headers = {
                'authority': 'www.virustotal.com',
                'accept': 'application/json',
                'accept-ianguage': 'en-US,en;q=0.9,es;q=0.8',
                'accept-language': 'en-US,en',
                'content-type': 'application/json',
                'referer': 'https://www.virustotal.com/',
                'sec-fetch-dest': 'empty',
                'sec-fetch-mode': 'cors',
                'sec-fetch-site': 'same-origin',
                'sec-gpc': '1',
                'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/109.0.0.0 Safari/537.36',
                'x-app-version': 'v1x159x2',
                'x-tool': 'vt-ui-main',
                'x-recaptcha-response': '03AFY_a8UNizjm_dmPPlSe7-QFQvfV5keszlk8_BBQo9c90j_58SirSVoV5odIfzt4wXIv-AGXLCelpPaAzSg26RPT1ocxSgnlQPMKYKdt9xrueMcspNXE0Wz4ERDEIEuo2ChUCFQPfnVMwDuhcheTVL4mU8gpv-DMe46p9GOdbJYDnamBpvIsuHNWENig6zf7cilZzRn5do5liKNv4XaG9CvP50GmfhFi5rx67IN0eH6wJZ7OnKbI6NBTgwUh0rV5uv4CHp0bKQz7eNh84tgdFgwSmzCIt1jBAkmNQV2eMoeZvIiyTNf1r7-HlG5yJJMEDeHRyAHnPTBBV4GcKawmlbvKm20HQZ1TMzFUTGg4aE1AEraHLM8MjbqqBoRWGJ-DDDwfHjgcIZyANllRcgd2uUTpNjvV9VWTCLl2soeXYDbW_MCOJlE5Qa3KE2eFf6nBc0lh1Nur5-v1A1OZ_5n3egTLd7v8wVCg-B8bCRM3_kQDZ0qThq64Cs6-6GEnGUBE6rvRMSzgn15INzhWBPETYee0all_oir6el3hicpAX-JDBayGSF40zjw',
                'X-VT-Anti-Abuse-Header': 'MTIzNTI4MzE5OTUtWkc5dWRDQmlaU0JsZG1scy0xNjc4ODA5MjE1LjQyMg==',
            }

            response = requests.get(
                f"https://www.virustotal.com/ui/files/{row['Hash']}",
                headers=headers,
            )
            data = response.json()


            df.loc[index, 'size'] = data['data']['attributes']['size']
            df.loc[index, 'submission_date'] = datetime.fromtimestamp(data['data']['attributes']['first_submission_date'])
            df.loc[index, 'total_submissions'] = data['data']['attributes']['times_submitted']
            df.loc[index, 'threat'] = data['data']['attributes']['popular_threat_classification']['suggested_threat_label']
            df.loc[index, 'detections'] = data['data']['attributes']['last_analysis_stats']['malicious']
                
            print("Finished")
            ## don't spam them and get banned :(
            time.sleep(1.5)
        ## dirty try and except, but it preserves known data
        except Exception as e:
            print(e)
            print("Failed!")
            failure_count +=1
            continue

    df.to_csv(csv_out, index=False)
main()