# The purpose of the script is to reprocess the json data and count the total number of spawned processes from 
# the root and children processes. Additionally, it calculates the maximum depth that children reach in the 
# application run analysis.

import os
import json

def process_json_file(file_path):
    with open(file_path, 'r') as json_file:
        data = json.load(json_file)
        root_process = data['application']['root_process']
        max_child_depth, total_child_processes = get_deepest_child_depth(root_process)
        data['application']['child_depth'] = max_child_depth
        data['application']['total_child_processes'] = total_child_processes
        return data

def get_deepest_child_depth(process_data):
    if 'children' in process_data:
        max_child_depth = 0
        total_child_processes = 0
        
        for child in process_data['children']:
            child_depth, child_total = get_deepest_child_depth(child)
            max_child_depth = max(max_child_depth, child_depth + 1)
            total_child_processes += child_total + 1
        
        return max_child_depth, total_child_processes
    return 0, 0

def main():
    directory = "parsed_analyses"
    for filename in os.listdir(directory):
        if filename.endswith('.json'):
            file_path = os.path.join(directory, filename)
            processed_data = process_json_file(file_path)
            with open(file_path, 'w') as json_file:
                json.dump(processed_data, json_file, indent=4)

if __name__ == "__main__":
    main()
