import os, json

# Provide the folder path to the "json" folder
source_folder_path = os.path.join(os.path.dirname(__file__), 'parsed_analyses')

  # Update this path according to your folder structure
#results_folder_path = os.path.join(os.path.dirname(__file__), 'parsed_analyses')

def import_json_files(folder_path):
    json_data = []
    for filename in os.listdir(folder_path):
        if filename.endswith('.json'):
            file_path = os.path.join(folder_path, filename)
            with open(file_path, 'r', encoding='utf-8') as file:
                try:
                    data = json.load(file)
                    json_data.append(data)
                except json.JSONDecodeError as e:
                    print(f"Error decoding JSON file {filename}: {e}")
    return json_data


# Call the function and get the list of dictionaries
json_list = import_json_files(source_folder_path)

for item in json_list:
    if not item['anomaly_detection']['cpu']:
        print(f"missing CPU data {item['application']['hash']}")
    else:
        if len(item['anomaly_detection']['cpu']['usage']) <= 0:
            print(f"missing CPU data {item['application']['hash']}")
    if not item['anomaly_detection']['memory']:
        print(f"missing memory data {item['application']['hash']}")
    else:
        if len(item['anomaly_detection']['memory']['usage']) <= 0:
            print(f"missing memory data {item['application']['hash']}")