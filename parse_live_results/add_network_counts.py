# The purpose of this script is to add counts to the network data while preserving the network data underlying data. 
# This is accomplished by interating through all of the network activity and adding counts for each type and each region 
# of the network activity
    
import os
import json
from collections import defaultdict
from pathlib import Path

# Create the new folder to store modified JSON files
output_folder = "new_json_data"
Path(output_folder).mkdir(exist_ok=True)


# Iterate through JSON files in the directory
input_directory = "parsed_analyses"
for filename in os.listdir(input_directory):
    if filename.endswith(".json"):
        file_path = os.path.join(input_directory, filename)
        
        # Read the JSON data from the file
        with open(file_path, "r") as json_file:
            data = json.load(json_file)
            copied_data = data.copy()
        
        copied_data['network'] = {
            'type':{},
            'activity':[],
            'regions':{}
        }
        
        for net_data in data['network']:
            # Update network types count
            network_type = net_data["type"]
            if not network_type in copied_data['network']['type']:
                copied_data['network']['type'][network_type] = 1
            else:
                copied_data['network']['type'][network_type] += 1
            
            region = net_data["region"]['country_name']
            if not region in copied_data['network']['regions']:
                copied_data['network']['regions'][region] = 1
            else:
                copied_data['network']['regions'][region] +=1


            # Update JSON data structure
            copied_data["network"]["activity"] = data["network"]
            
        # Write the modified data to a new file in the output folder
        output_path = os.path.join(output_folder, filename)
        with open(output_path, "w") as json_output_file:
            json.dump(copied_data, json_output_file, indent=4)